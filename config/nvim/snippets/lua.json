{
  "require": {
    "prefix": "require",
    "body": ["require(\"${1:module}\")"]
  },
  "class": {
    "prefix": "class",
    "body": [
      "local ${1:className} = {}\n",
      "$1.${2:new} = function($3)",
      "\t$0",
      "end",
      "",
      "return $1"
    ]
  },
  "if": {
    "prefix": "if",
    "body": ["if ${1:true} then", "\t$0", "end"]
  },
  "elseif": {
    "prefix": "elseif",
    "body": ["elseif ${1:true} then", "\t$0"]
  },
  "for": {
    "prefix": "for",
    "body": ["for ${1:i}=${2:1},${3:10} do", "\t$0", "end"]
  },
  "foreach": {
    "prefix": "foreach",
    "body": ["for {1:key}, ${2:val} in pairs(${3:table}) do", "\t$0", "end"]
  },
  "forline": {
    "prefix": "forline",
    "body": [
      "f = io.open(${1:\"${2:filename}\"}, \"${3:r}\")\n",
      "while true do",
      "\tline = f:read()",
      "\tif line == nil then break end\n",
      "\t${0:-- code}",
      "end"
    ]
  },
  "while": {
    "prefix": "while",
    "body": ["while ${1:true} do", "\t$0", "end"]
  },
  "StyluaIgnore": {
    "prefix": "stylua-ignore",
    "body": ["-- stylua: ignore start", "$0", "-- stylua: ignore end"]
  },
  "StyluaIgnoreBlack": {
    "prefix": "stylua-ignore-block",
    "body": ["-- stylua: ignore"]
  }
}
